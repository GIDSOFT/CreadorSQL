/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package tareacreadordesql;

import java.awt.FileDialog;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.mozilla.universalchardet.UniversalDetector;

/**
 *
 * @author jucazuse
 */
public class Interfaz extends javax.swing.JFrame {
    //las siguientes variables son utilizadas en los metodos que 
    //leen archivos.
    /*Esta variable va a tomar como valor la siguiente fila que se lea
     del archivo*/

    String fila;
    /*este array toma como valores la primera fila del archivo leido
     despues de ser cortada por el separador*/
    String[] posColumnas;
    /*este array toma como valores las filas del archivo leido
     despues de ser cortada por el separador*/
    String[] posFilas;
    /*nos sirve para darle el modelo que necesitamos a la tabla*/
    DefaultTableModel modeloTabla;
    /*Separador por defecto en caso de no ser elegido ninguno de 
     los radio button*/
    String separador = "@";
    /*Este es la clase que nos sirve para leer el archivo*/
    /*Variable para saber la cantidad de lineas del archivo*/
    int contador = 0;
    int contadorFilas = 0;
    /*Variables para saber el peso del archivo*/
    float pesoByte;
    float pesoKiloByte;
    /*esta variable es usada para no permitir que el usuario
     vea las propiedades del mismo archivo mas de una vez*/
    String comparar;
    /*Esta variable cumple la misma funcion que la de
     arriba pero es para no dejar cargar la tabla mas de
     una vez si es el mismo archivo*/
    String comparacion;
    /*este String guarda el separador que el usuario digito */
    String otroSeparador;
    /*corta lo que hay en otro separador para no causar error
     en el programa*/
    String otro;
    //Estas variables nos sirven en el metodo de abrir el archivo
    String nombre;
    /*Esta clase es la que abre la ventana para elejir
     el archivo que el usuario va a leer*/
    FileDialog fileDialog;
    Scanner scan;
    File file;
    BufferedReader archivo;
    FileWriter fichero;
    PrintWriter escribirArchivo;
    String separadorArchivo = System.getProperty("file.separator");
    String rutaDondeSeCreaArchivo = System.getProperty("user.dir");
    File ruta = new File(rutaDondeSeCreaArchivo.concat(separadorArchivo).concat("Archivo.sql"));
    String encoding;

    /**
     * Creates new form Interfaz
     */
    public Interfaz() {
        initComponents();
        lbOtroSeparador.setVisible(false);
        rbSi.setVisible(false);
        rbNo.setVisible(false);
        btnPropiedades.setVisible(false);
        jTableArchivo.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bGSeparadores = new javax.swing.ButtonGroup();
        bGOtroSeparador = new javax.swing.ButtonGroup();
        lbSeleccionar = new javax.swing.JLabel();
        btnExaminar = new javax.swing.JButton();
        lbRegistros = new javax.swing.JLabel();
        lbCantidadRegistros = new javax.swing.JLabel();
        lbPesoArchivoKB = new javax.swing.JLabel();
        lbPesoArchivo = new javax.swing.JLabel();
        lbSeparadorColumnas = new javax.swing.JLabel();
        rbPunto = new javax.swing.JRadioButton();
        rbComa = new javax.swing.JRadioButton();
        rbBarra = new javax.swing.JRadioButton();
        lbOtro = new javax.swing.JLabel();
        lbNombreTabla = new javax.swing.JLabel();
        txtTablaDestino = new javax.swing.JTextField();
        btnPrevisualizar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableArchivo = new javax.swing.JTable();
        btnGenerarArchivo = new javax.swing.JButton();
        txtOtro = new javax.swing.JTextField();
        rbNo = new javax.swing.JRadioButton();
        rbSi = new javax.swing.JRadioButton();
        lbOtroSeparador = new javax.swing.JLabel();
        lbMensaje = new javax.swing.JLabel();
        txtArchivo = new javax.swing.JTextField();
        btnPropiedades = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lbSeleccionar.setText("Seleccione Archivo");

        btnExaminar.setText("Examinar");
        btnExaminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExaminarActionPerformed(evt);
            }
        });

        lbRegistros.setText("Cantidad de Registros Aproximados");

        lbCantidadRegistros.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        lbPesoArchivoKB.setText("Peso Archivo en KB");

        lbPesoArchivo.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        lbSeparadorColumnas.setText("Separador Columnas");

        bGSeparadores.add(rbPunto);
        rbPunto.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        rbPunto.setText(";");
        rbPunto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbPuntoActionPerformed(evt);
            }
        });

        bGSeparadores.add(rbComa);
        rbComa.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        rbComa.setText(",");
        rbComa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbComaActionPerformed(evt);
            }
        });

        bGSeparadores.add(rbBarra);
        rbBarra.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        rbBarra.setText("||");
        rbBarra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbBarraActionPerformed(evt);
            }
        });

        lbOtro.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbOtro.setText("Otro");

        lbNombreTabla.setText("Nombre Tabla Destino");

        btnPrevisualizar.setText("Previsualizar");
        btnPrevisualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrevisualizarActionPerformed(evt);
            }
        });

        jTableArchivo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTableArchivo);

        btnGenerarArchivo.setText("Generar Archivo SQL");
        btnGenerarArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarArchivoActionPerformed(evt);
            }
        });

        txtOtro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOtroActionPerformed(evt);
            }
        });

        bGOtroSeparador.add(rbNo);
        rbNo.setText("no");
        rbNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbNoActionPerformed(evt);
            }
        });

        bGOtroSeparador.add(rbSi);
        rbSi.setText("si");
        rbSi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbSiActionPerformed(evt);
            }
        });

        lbOtroSeparador.setText("Desea Escoger otro Separador");

        lbMensaje.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbMensaje.setForeground(new java.awt.Color(255, 0, 0));

        btnPropiedades.setText("Propiedades");
        btnPropiedades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPropiedadesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lbOtroSeparador, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
                                    .addComponent(lbSeparadorColumnas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(rbSi)
                                        .addGap(18, 18, 18)
                                        .addComponent(rbNo)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lbMensaje, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(rbPunto)
                                        .addGap(18, 18, 18)
                                        .addComponent(rbComa)
                                        .addGap(18, 18, 18)
                                        .addComponent(rbBarra)
                                        .addGap(18, 18, 18)
                                        .addComponent(lbOtro, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtOtro, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lbSeleccionar, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(lbPesoArchivoKB, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(lbPesoArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(lbRegistros, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lbCantidadRegistros, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(80, 80, 80)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnExaminar, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                                    .addComponent(btnPropiedades, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(lbNombreTabla, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTablaDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnPrevisualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(168, 168, 168)
                .addComponent(btnGenerarArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbSeleccionar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExaminar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbCantidadRegistros, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbRegistros, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lbPesoArchivoKB, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbPesoArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(btnPropiedades, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbSeparadorColumnas, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rbPunto)
                    .addComponent(rbComa)
                    .addComponent(rbBarra)
                    .addComponent(lbOtro, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtOtro, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbMensaje, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lbOtroSeparador, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(rbSi)
                        .addComponent(rbNo)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lbNombreTabla, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(txtTablaDestino)))
                .addGap(18, 18, 18)
                .addComponent(btnPrevisualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnGenerarArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnExaminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExaminarActionPerformed
        abrirArchivo();
        detector();
    }//GEN-LAST:event_btnExaminarActionPerformed

    private void btnPrevisualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevisualizarActionPerformed
        nombreColumnasYFilas();
    }//GEN-LAST:event_btnPrevisualizarActionPerformed

    private void rbPuntoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbPuntoActionPerformed
        ComprobacionEleccionRadioBoton();
    }//GEN-LAST:event_rbPuntoActionPerformed

    private void rbSiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbSiActionPerformed
        habilitarRadioBotones();
    }//GEN-LAST:event_rbSiActionPerformed

    private void rbComaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbComaActionPerformed
        ComprobacionEleccionRadioBoton();
    }//GEN-LAST:event_rbComaActionPerformed

    private void rbBarraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbBarraActionPerformed
        ComprobacionEleccionRadioBoton();
    }//GEN-LAST:event_rbBarraActionPerformed

    private void txtOtroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOtroActionPerformed
        ComprobacionEleccionRadioBoton();
    }//GEN-LAST:event_txtOtroActionPerformed

    private void rbNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbNoActionPerformed
        habilitarRadioBotones();
    }//GEN-LAST:event_rbNoActionPerformed

    private void btnPropiedadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPropiedadesActionPerformed
        CantidadRegistrosYPeso();
    }//GEN-LAST:event_btnPropiedadesActionPerformed

    private void btnGenerarArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarArchivoActionPerformed
        guardarArchivo();
    }//GEN-LAST:event_btnGenerarArchivoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interfaz().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bGOtroSeparador;
    private javax.swing.ButtonGroup bGSeparadores;
    private javax.swing.JButton btnExaminar;
    private javax.swing.JButton btnGenerarArchivo;
    private javax.swing.JButton btnPrevisualizar;
    private javax.swing.JButton btnPropiedades;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableArchivo;
    private javax.swing.JLabel lbCantidadRegistros;
    private javax.swing.JLabel lbMensaje;
    private javax.swing.JLabel lbNombreTabla;
    private javax.swing.JLabel lbOtro;
    private javax.swing.JLabel lbOtroSeparador;
    private javax.swing.JLabel lbPesoArchivo;
    private javax.swing.JLabel lbPesoArchivoKB;
    private javax.swing.JLabel lbRegistros;
    private javax.swing.JLabel lbSeleccionar;
    private javax.swing.JLabel lbSeparadorColumnas;
    private javax.swing.JRadioButton rbBarra;
    private javax.swing.JRadioButton rbComa;
    private javax.swing.JRadioButton rbNo;
    private javax.swing.JRadioButton rbPunto;
    private javax.swing.JRadioButton rbSi;
    private javax.swing.JTextField txtArchivo;
    private javax.swing.JTextField txtOtro;
    private javax.swing.JTextField txtTablaDestino;
    // End of variables declaration//GEN-END:variables
    /*este metodo nos sirve para abrir el archivo*/

    public void abrirArchivo() {
        fileDialog = new FileDialog(this, "Abrir archivo", FileDialog.LOAD);
        fileDialog.setLocation(50, 50);
        fileDialog.setFile("* .* ");
        fileDialog.setVisible(true);
        // getFile obtengo el nombre del archivo seleccionado
        nombre = fileDialog.getDirectory() + fileDialog.getFile();
        if (nombre != null) {
            try {
                archivo = new BufferedReader(new FileReader(nombre));
                txtArchivo.setText(nombre);
                btnPropiedades.setVisible(true);
                btnPrevisualizar.setVisible(true);
                btnGenerarArchivo.setVisible(true);
                habilitarBotones();
            } catch (IOException e) {
                JOptionPane.showMessageDialog(this, "Señor Usuario escoja un archivo para abrir");
                txtArchivo.setText("");
                btnPropiedades.setVisible(false);
                btnPrevisualizar.setVisible(false);
                btnGenerarArchivo.setVisible(false);
                lbCantidadRegistros.setText("");
                lbPesoArchivo.setText("");
            }
        }
    }

    /*este metodo se utiliza por si el usuario le dio no a elgir otro 
     separador y ese no era el archivo. abriendo otro archivo pueda 
     escoger de nuevo el separador*/
    public void habilitarBotones() {
        if (!nombre.equals(comparar)) {
            rbSi.setVisible(true);
            rbNo.setVisible(true);
            lbMensaje.setVisible(false);
            lbOtroSeparador.setVisible(true);
        }
    }

    /*este metodo sirve para darle el nombre a las filas y las 
     columnas de la tabla.*/
    public void nombreColumnasYFilas() {
        try {
            modeloTabla = (DefaultTableModel) jTableArchivo.getModel();
            file = new File(nombre);
            scan = new Scanner(file, encoding);
            if (!nombre.equals(comparacion)) {
                eliminarRegistros();
                /*Ciclo para las columnas de la tabla*/
                while (scan.hasNextLine()) {
                    fila = scan.nextLine();
                    posColumnas = fila.split(separadorElejido());
                    for (int i = 0; i < posColumnas.length; i++) {
                        modeloTabla.addColumn(posColumnas[i]);
                    }
                    break;
                }
                /*ciclo para saber el numero de filas que tiene mi archivo y
                 agregar filas a la tabla*/
                while (scan.hasNext()) {
                    fila = scan.nextLine();
                    contadorFilas++;
                    posFilas = fila.split(separadorElejido());
                    modeloTabla.addRow(posFilas);
                }
            } else {
                JOptionPane.showMessageDialog(this, "El Archivo ya Esta Previsualisado");
            }
            comparacion = nombre;
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        }
    }


    /*Este metodo sirve para que si el usuario cargar
     un archivo diferente y previsualisa dicho archivo los 
     registros que tiene la tabla se eliminan y se cargan con 
     los nuevos datos del otro archivo*/
    public void eliminarRegistros() {
        if (!nombre.equals(comparacion)) {
            modeloTabla.setColumnCount(0);
            modeloTabla.setRowCount(0);
        }
    }

    /*Este metodo nos sirve para saber que separador 
     a elegido el usuario.*/
    public String separadorElejido() {
        if (rbPunto.isSelected()) {
            separador = ";";
        }
        if (rbComa.isSelected()) {
            separador = "\\,";
        }
        if (rbBarra.isSelected()) {
            separador = "\\|\\|";

        } else if (!txtOtro.getText().isEmpty()) {
            otroSeparador = txtOtro.getText();
            otro = otroSeparador.substring(0, 1);
            separador = "\\".concat(otro);
        }
        return separador;
    }

    /*Este metodo nos sirve pare saber el peso y la cantidad
     de linas de el fichero*/
    public void CantidadRegistrosYPeso() {
        file = new File(nombre);
        if (archivo != null) {
            try {
                if (!nombre.equals(comparar)) {
                    scan = new Scanner(file, detector());
                    while (scan.hasNextLine()) {
                        fila = scan.nextLine();
                        contador++;
                    }
                    lbCantidadRegistros.setText(String.valueOf(contador));
                    /*Calcular peso*/
                    pesoByte = file.length();
                    pesoKiloByte = pesoByte / 1024;
                    lbPesoArchivo.setText(String.valueOf(pesoKiloByte));
                }
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (nombre.equals(comparar)) {
            JOptionPane.showMessageDialog(this, "El archivo es el mismo");
        }
        comparar = nombre;
        contador = 0;
    }

    /*Este metodo se utiliza para saber si el 
     usuario quiere cambiar la decision sobre el 
     separador elejido*/
    public void habilitarRadioBotones() {
        if ((rbSi.isSelected()) && (rbPunto.isSelected())) {
            rbComa.setEnabled(true);
            rbBarra.setEnabled(true);
            txtOtro.setEnabled(true);
        } else if ((rbSi.isSelected()) && (rbComa.isSelected())) {
            rbPunto.setEnabled(true);
            rbBarra.setEnabled(true);
            txtOtro.setEnabled(true);
        } else if ((rbSi.isSelected()) && (rbBarra.isSelected())) {
            rbPunto.setEnabled(true);
            rbComa.setEnabled(true);
            txtOtro.setEnabled(true);
        } else if ((rbSi.isSelected()) && (!txtOtro.getText().isEmpty())) {
            rbPunto.setEnabled(true);
            rbComa.setEnabled(true);
            rbBarra.setEnabled(true);
            txtOtro.setText("");
        } else if (rbNo.isSelected()) {
            lbMensaje.setText("Señor Usario Usted no Decidio Cambiar el Separador");
            lbOtroSeparador.setVisible(false);
            rbSi.setVisible(false);
            rbNo.setVisible(false);
            txtOtro.setEditable(false);
            rbPunto.setEnabled(false);
            rbComa.setEnabled(false);
            rbBarra.setEnabled(false);
        }

    }

    /*Este metodo es para que cuando se elija un 
     separador los otros se deshabiliten y nos
     habilita la opcion de cambiar el separador*/
    public void ComprobacionEleccionRadioBoton() {
        if (rbPunto.isSelected()) {
            rbComa.setEnabled(false);
            rbBarra.setEnabled(false);
            txtOtro.setEnabled(false);
            lbOtroSeparador.setVisible(true);
            rbSi.setVisible(true);
            rbNo.setVisible(true);
        } else if (rbComa.isSelected()) {
            rbPunto.setEnabled(false);
            rbBarra.setEnabled(false);
            txtOtro.setEnabled(false);
            lbOtroSeparador.setVisible(true);
            rbSi.setVisible(true);
            rbNo.setVisible(true);
        } else if (rbBarra.isSelected()) {
            rbComa.setEnabled(false);
            rbPunto.setEnabled(false);
            txtOtro.setEnabled(false);
            lbOtroSeparador.setVisible(true);
            rbSi.setVisible(true);
            rbNo.setVisible(true);
        } else if (!txtOtro.getText().isEmpty()) {
            rbComa.setEnabled(false);
            rbPunto.setEnabled(false);
            rbBarra.setEnabled(false);
            lbOtroSeparador.setVisible(true);
            rbSi.setVisible(true);
            rbNo.setVisible(true);
        }

    }

    public void guardarArchivo() {
        try {
            file = new File(nombre);

            fichero = new FileWriter(ruta, true);
            escribirArchivo = new PrintWriter(fichero);
            escribirArchivo.print("INSERT ".concat(" INTO ".concat(txtTablaDestino.getText())));
            escribirArchivo.print(";");
            escribirArchivo.println("\n");
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                if (null != fichero) {
                    fichero.close();
                }
            } catch (Exception e2) {
                e2.printStackTrace();
            }
        }
    }

    public String detector() {
        try {
            file = new File(nombre);
            final FileInputStream fis = new FileInputStream(file);
            final UniversalDetector detector = new UniversalDetector(null);
            handleData(fis, detector);
            encoding = getEncoding(detector);
            System.out.println("El texto es |" + encoding + "|");
            detector.reset();
            fis.close();
        } catch (IOException e) {
            System.err.println("IOException " + e);
        }
        return encoding;

    }

    private String getEncoding(UniversalDetector detector) {
        if (detector.isDone()) {
            return detector.getDetectedCharset();
        }
        System.out.println("fvvf"+detector.getDetectedCharset());
        return detector.getDetectedCharset();
    }

    private void handleData(FileInputStream fis, UniversalDetector detector) throws IOException {
        int nread;
        final byte[] buf = new byte[4096];
        while ((nread = fis.read(buf)) > 0 && !detector.isDone()) {
            detector.handleData(buf, 0, nread);

        }
        detector.dataEnd();
    }

}
